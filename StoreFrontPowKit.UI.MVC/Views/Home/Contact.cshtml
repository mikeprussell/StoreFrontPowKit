@model StoreFrontPowKit.UI.MVC.Models.ContactViewModel

@{
    ViewBag.Title = "Contact";
}

<p class="text-danger">
    @if (ViewBag.ErrorMessage != null)
    {
        <span>@Html.Raw(ViewBag.ErrorMessage)</span>
    }
</p>

<!-- Contact Form -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="mb-4">
        <div class="container px-4 px-lg-5">
            <div class="row gx-4 gx-lg-5 justify-content-center">
                <div class="col-md-10 col-lg-8 col-xl-7">
                    <br />
                    <h2>@ViewBag.Title</h2>
                    <br />
                    <p>
                        Want to get in touch with us? Feel free to contact us directly or fill out the form below to send us a message and we will get back to you as soon as possible!
                    </p>
                    <div class="by-5">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <form id="contactForm">
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "name", placeholder = "Name" } })
                                <label for="name">Name</label>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                <br />
                            </div>
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "email", placeholder = "Email" } })
                                <label for="name">Email</label>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                <br />
                            </div>
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @id = "subject", placeholder = "Subject" } })
                                <label for="name">Subject</label>
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                <br />
                            </div>
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @id = "message", placeholder = "Message" } })
                                <label for="name">Message</label>
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                <br />
                            </div>

                            <!-- Submit Button-->
                            <button type="submit" value="Submit" class="btn btn-primary" id="submitButton">Send</button>

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}