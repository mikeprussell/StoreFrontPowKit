@*@model IEnumerable<StoreFrontPowKit.DATA.EF.Product>*@
@model PagedList.IPagedList<StoreFrontPowKit.DATA.EF.Product>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Product List";
}

<div class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md py-2">
                <h2 class="py-2">@ViewBag.Title</h2>
                <hr />

                <div class="row">
                    @using (Html.BeginForm("SearchProducts", "Filters", FormMethod.Get))
                    {
                        <div>
                            Search by Product Name: @Html.TextBox("SearchString", ViewBag.SearchString as string)
                            <input type="submit" value="Search" />
                            <div class="d-flex flex-row-reverse">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
                        </div>
                    }
                </div>


                @if (User.IsInRole("Admin") || User.IsInRole("Operations Employee"))
                {
                    <p>
                        @Html.ActionLink("Create New", "Create")
                    </p>
                }

                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductImage)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().UnitPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Category.CategoryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductStatus.StatusName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Supplier.CompanyName)
                        </th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <img src="~/Content/images/products/t_@item.ProductImage" alt="Product image" title="@item.ProductName" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UnitPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category.CategoryName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductStatus.StatusName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
                            </td>
                            <td>
                                @if (User.IsInRole("Admin") || User.IsInRole("Operations Employee"))
                                {
                                    <span>@Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |</span>
                                }

                                @Html.ActionLink("Details", "Details", new { id = item.ProductID })

                                @if (User.IsInRole("Admin") || User.IsInRole("Operations Employee"))
                                {
                                    @:|
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
                                }
                            </td>
                        </tr>
                    }

                </table>

                <div class="d-flex flex-row-reverse">
                    @Html.PagedListPager(Model, page => Url.Action("SearchProducts", new { page, searchString = ViewBag.SearchString }))
                </div>

                @*"#products"*@

            </div>
        </div>
    </div>
</div>


